version: '3.8'

services:
  frontend:
    build:
      context: ./frontend-new
      dockerfile: Dockerfile.prod
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:3001
    depends_on:
      - backend
    networks:
      - verigrade-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://verigrade:password@postgres:5432/verigrade
      - JWT_SECRET=your-super-secret-jwt-key
    depends_on:
      - postgres
      - redis
    networks:
      - verigrade-network

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=verigrade
      - POSTGRES_USER=verigrade
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - verigrade-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - verigrade-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - verigrade-network

volumes:
  postgres_data:

networks:
  verigrade-network:
    driver: bridge



apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: verigrade-ingress
  namespace: verigrade
  labels:
    app: verigrade
    component: ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    nginx.ingress.kubernetes.io/client-max-body-size: "10m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://app.verigrade.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Permissions-Policy: geolocation=(), microphone=(), camera=()";
spec:
  tls:
  - hosts:
    - app.verigrade.com
    - api.verigrade.com
    secretName: verigrade-tls
  rules:
  - host: app.verigrade.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: verigrade-frontend
            port:
              number: 80
  - host: api.verigrade.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: verigrade-backend
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: verigrade-network-policy
  namespace: verigrade
  labels:
    app: verigrade
    component: network-policy
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: verigrade
    ports:
    - protocol: TCP
      port: 3000
    - protocol: TCP
      port: 5432
    - protocol: TCP
      port: 6379
    - protocol: TCP
      port: 9090
  egress:
  - {} # Allow all egress traffic
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: verigrade-backend-pdb
  namespace: verigrade
  labels:
    app: verigrade-backend
    component: backend
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: verigrade-backend
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: verigrade-frontend-pdb
  namespace: verigrade
  labels:
    app: verigrade-frontend
    component: frontend
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: verigrade-frontend





